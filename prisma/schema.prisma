// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  // Relations
  feedPosts     FeedPost[]
  shareLinks    ShareLink[]
  subscriptions Subscription[] @relation("Subscriber")
  subscribers   Subscription[] @relation("Publisher")

  @@map("users")
}

model FeedPost {
  id          String   @id @default(cuid())
  userId      String
  platform    Platform
  postId      String
  author      String
  content     String
  mediaUrl    String?
  thumbnailUrl String?
  likes       Int      @default(0)
  comments    Int      @default(0)
  shares      Int      @default(0)
  timestamp   DateTime
  viewDuration Int?
  capturedAt  DateTime @default(now())
  createdAt   DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, platform, postId])
  @@map("feed_posts")
}

model ShareLink {
  id        String   @id @default(cuid())
  userId    String
  token     String   @unique
  expiresAt DateTime
  isUsed    Boolean  @default(false)
  usedBy    String?
  createdAt DateTime @default(now())

  // Relations
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("share_links")
}

model Subscription {
  id           String   @id @default(cuid())
  subscriberId String
  publisherId  String
  createdAt    DateTime @default(now())

  // Relations
  subscriber User @relation("Subscriber", fields: [subscriberId], references: [id], onDelete: Cascade)
  publisher  User @relation("Publisher", fields: [publisherId], references: [id], onDelete: Cascade)

  @@unique([subscriberId, publisherId])
  @@map("subscriptions")
}

enum Platform {
  TIKTOK
  INSTAGRAM
  TWITTER
}
